{"version":3,"file":"experimental.js","sourceRoot":"","sources":["../src/experimental.ts"],"names":[],"mappings":"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","sourcesContent":["// Experimental API below\r\n\r\n/**\r\n * get input values\r\n *\r\n * Extended by: Gabriel Schuster <github.com@actra.de>\r\n * Now gets values of inputs (including \"checked\" status radios, checkboxes), textareas and selects (including multiselects)\r\n * Tries to identify the elements as exact as possible, falls back to numeric index when identification fails\r\n * WIP refactor by: PatrickJS\r\n */\r\nexport function __getInputValues() {\r\n  const _inputs = document.querySelectorAll('input, textarea, select');\r\n  const inputs = Array.prototype.slice.call(_inputs);\r\n\r\n  return inputs.map(function(input: any) {\r\n    const inputTagName = input.tagName.toLowerCase();\r\n    const inputType = input.type;\r\n    const inputId = (input.id && typeof input.id === 'string') ? input.id : null;\r\n    const inputName = (input.name && typeof input.name === 'string') ? input.name : null;\r\n    const inputValue = (input.value && typeof input.value === 'string') ? input.value : null;\r\n    const inputChildNodes = input.childNodes;\r\n    const inputSelected = Boolean(input.selected);\r\n\r\n    type InputOption = {value: string, selected: boolean};\r\n    type HmrStore = {\r\n      tag: string;\r\n      type: string;\r\n      id: string;\r\n      name: string;\r\n      value: string;\r\n      checked: boolean;\r\n      options: Array<InputOption>;\r\n    };\r\n\r\n    let elementStore: HmrStore = {\r\n      'tag': inputTagName,\r\n      'type': null,\r\n      'id': inputId,\r\n      'name': inputName,\r\n      'value': '',\r\n      'checked': false,\r\n      'options': []\r\n    };\r\n\r\n    if ('input' === inputTagName || 'textarea' === inputTagName) {\r\n      elementStore['type'] = inputType;\r\n\r\n      if ('input' !== inputTagName) {\r\n        elementStore['value'] = inputValue;\r\n        return elementStore;\r\n      }\r\n      switch (inputType) {\r\n        case 'checkbox':\r\n        case 'radio':\r\n          elementStore['checked'] = inputSelected;\r\n          elementStore['value'] = inputValue;\r\n          return elementStore;\r\n        case 'image':\r\n        case 'button':\r\n        case 'submit':\r\n        case 'reset':\r\n        default:\r\n          // These types don't need any config and thus need no update, they only were stored because they match \"input\"\r\n          return elementStore;\r\n      }\r\n    } else if ('select' === inputTagName) {\r\n      const childNodes = Array.prototype.slice.call(inputChildNodes);\r\n\r\n      const options: Array<InputOption> = childNodes.map((option: any, i: number) => {\r\n        return { value: option['value'], selected: Boolean(option['selected']) };\r\n      });\r\n\r\n      elementStore['options'] = options;\r\n      return elementStore;\r\n    }\r\n\r\n    return elementStore;\r\n  });\r\n}\r\n\r\n/**\r\n * set input values\r\n *\r\n * Extended by: Gabriel Schuster <github.com@actra.de>\r\n * WIP refactor by: PatrickJS\r\n */\r\nexport function __setInputValues($inputs: any) {\r\n  const inputs: any = document.querySelectorAll('input, textarea');\r\n\r\n  $inputs.forEach((store: any, i: number) => {\r\n\r\n    if ('input' === store.tag || 'textarea' === store.tag) {\r\n      if ('input' === store.tag && ('checkbox' === store.type || 'radio' === store.type)) {\r\n        let selector = 'input' + (\r\n          null !== store.id ? '#' + store.id : ''\r\n        ) + '[type=\"' + store.type + '\"]' + (null !== store.name ? '[name=\"' + store.name + '\"]' : '') +\r\n                       '[value=\"' + store.value + '\"]';\r\n        let element: any  = document.body.querySelector(selector);\r\n\r\n        if (element && Boolean(store['checked'])) {\r\n          element['checked'] = 'checked';\r\n\r\n          element.dispatchEvent(new CustomEvent('input', {detail: element['checked']}));\r\n        }\r\n      } else if ('input' === store.tagName.toLowerCase() &&\r\n        ('image' === store.type || 'button' === store.type || 'submit' === store.type || 'reset' === store.type)) {\r\n          // These types don't need any config and thus need no update, they only were stored because they match \"input\"\r\n      } else {\r\n        if (null === store.id && null === store.name) {\r\n          if (store.value.length &&\r\n            inputs[i] &&\r\n            inputs[i].tagName.toLowerCase() === store.tag &&\r\n            ('textarea' === store.tag || inputs[i].getAttribute('type') === store.type) &&\r\n            ('string' !== typeof inputs[i].id || !inputs[i].id.length) &&\r\n            ('string' !== typeof inputs[i].getAttribute('name') ||\r\n            !inputs[i].getAttribute('name').length)) {\r\n\r\n              inputs[i]['value'] = store.value;\r\n              inputs[i].dispatchEvent(new CustomEvent('input', {detail: inputs[i]['value']}));\r\n          }\r\n        } else {\r\n          let selector = 'input' +\r\n            (null !== store.id ? '#' + store.id : '') + ('input' === store.tag ? '[type=\"' + store.type + '\"]' : '') +\r\n            (null !== store.name ? '[name=\"' + store.name + '\"]' : '');\r\n          let element: any  = document.body.querySelector(selector);\r\n\r\n          if (element && store.value.length) {\r\n            element['value'] = store.value;\r\n            element.dispatchEvent(new CustomEvent('input', {detail: element['value']}));\r\n          }\r\n        }\r\n      }\r\n  } else if ('select' === store.tag) {\r\n      let select: any = null;\r\n\r\n      if (null === store.id && null === store.name) {\r\n        if (inputs[i] && inputs[i].tagName.toLowerCase() === store.tag && ('string' !== typeof inputs[i].id || !inputs[i].id.length) &&\r\n           ('string' !== typeof inputs[i].getAttribute('name') || !inputs[i].getAttribute('name').length)) {\r\n            select = inputs[i];\r\n        }\r\n      } else {\r\n        let selector = 'select' + (null !== store.id ? '#' + store.id : '') + (null !== store.name ? '[name=\"' + store.name + '\"]' : '');\r\n        let element: any  = document.body.querySelector(selector);\r\n        if (element) {\r\n          select = element;\r\n        }\r\n      }\r\n\r\n      if (select) {\r\n        store.options.forEach((storedOption: any, j: number) => {\r\n          let option: any = select.querySelector('option[value=\"' + storedOption.value + '\"]');\r\n\r\n          if (\r\n            !option &&\r\n            select.childNodes[j] &&\r\n            ('string' !== typeof select.childNodes[j]['value'] || !select.childNodes[j]['value'].length)\r\n          ) {\r\n            option = select.childNodes[j];\r\n          }\r\n          if (option && !!storedOption.selected) {\r\n            option['selected'] = 'selected';\r\n\r\n            option.dispatchEvent(new CustomEvent('input', {detail: option['selected']}));\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport function __createInputTransfer() {\r\n  const $inputs = __getInputValues();\r\n  return function restoreInputValues() {\r\n    return __setInputValues($inputs);\r\n  };\r\n}\r\n"]}